name: Github Actions
run-name: ${{ github.actor }} is running Github Actions ðŸš€
on:
  push:
    branches:
      - '*'

jobs:
  build-dev:
    name: Build docker dev
    runs-on: ubuntu-24.04

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup Docker, Docker compose and build start
      uses: hoverkraft-tech/compose-action@v2.0.1

  test-api-fastify-route-moviecategory:
    name: Build and test docker api-fastify route moviecategory
    runs-on: ubuntu-24.04
    needs: [ build-dev ]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup Docker, Docker compose and build start
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        services: |
          database-postgresql
          api-fastify

    - name: Test api-fastify route moviecategory
      run: sh scripts/test.bash api-route-moviecategory

  test-api-fastify-route-movie:
    name: Build and test docker api-fastify route movie
    runs-on: ubuntu-24.04
    needs: [ build-dev ]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup Docker, Docker compose and build start
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        services: |
          database-postgresql
          api-fastify

    - name: Test api-fastify route movie
      run: sh scripts/test.bash api-route-movie

  test-api-fastify-route-moviedependmoviecategory:
    name: Build and test docker api-fastify route moviedependmoviecategory
    runs-on: ubuntu-24.04
    needs: [ build-dev ]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup Docker, Docker compose and build start
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        services: |
          database-postgresql
          api-fastify

    - name: Test api-fastify route moviedependmoviecategory
      run: sh scripts/test.bash api-route-moviedependmoviecategory

  test-api-fastify-route-moviedirector:
    name: Build and test docker api-fastify route moviedirector
    runs-on: ubuntu-24.04
    needs: [ build-dev ]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup Docker, Docker compose and build start
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        services: |
          database-postgresql
          api-fastify

    - name: Test api-fastify route moviedirector
      run: sh scripts/test.bash api-route-moviedirector

  test-api-fastify-service-moviecategory:
    name: Build and test docker api-fastify service moviecategory
    runs-on: ubuntu-24.04
    needs: [ build-dev ]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup Docker, Docker compose and build start
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        services: |
          database-postgresql
          api-fastify

    - name: Test api-fastify service moviecategory
      run: sh scripts/test.bash api-service-moviecategory

  test-api-fastify-service-moviedependmoviecategory:
    name: Build and test docker api-fastify service moviedependmoviecategory
    runs-on: ubuntu-24.04
    needs: [ build-dev ]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup Docker, Docker compose and build start
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        services: |
          database-postgresql
          api-fastify

    - name: Test api-fastify service moviedependmoviecategory
      run: sh scripts/test.bash api-service-moviedependmoviecategory

  test-api-fastify-service-moviedirector:
    name: Build and test docker api-fastify service moviedirector
    runs-on: ubuntu-24.04
    needs: [ build-dev ]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup Docker, Docker compose and build start
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        services: |
          database-postgresql
          api-fastify

    - name: Test api-fastify service moviedirector
      run: sh scripts/test.bash api-service-moviedirector

  test-api-fastify-service-movie:
    name: Build and test docker api-fastify service movie
    runs-on: ubuntu-24.04
    needs: [ build-dev ]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup Docker, Docker compose and build start
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        services: |
          database-postgresql
          api-fastify

    - name: Test api-fastify service movie
      run: sh scripts/test.bash api-service-movie

  test-api-fastify-service-useraccount:
    name: Build and test docker api-fastify service useraccount
    runs-on: ubuntu-24.04
    needs: [ build-dev ]

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup Docker, Docker compose and build start
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        services: |
          database-postgresql
          api-fastify

    - name: Test api-fastify service useraccount
      run: sh scripts/test.bash api-service-useraccount

  count-project-lines-of-code:
    name: Count project lines of code
    runs-on: ubuntu-24.04
    env:
      FORCE_JAVASCRIPT_ACTIONS_TO_NODE20: true
  
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup nix
      uses: cachix/install-nix-action@v27

    - name: Count lines of code
      uses: workflow/nix-shell-action@v3
      with:
        packages: scc
        script: |
          scc > lines_of_code.txt

    - name: Upload lines of code artifact
      uses: actions/upload-artifact@v4
      with:
        name: lines_of_code
        path: lines_of_code.txt
        retention-days: 30

  build-nix:
    name: Build on nix
    runs-on: ubuntu-24.04

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Setup nix
      uses: cachix/install-nix-action@v27

    - name: Enter nix flake devshell
      run: nix develop .
      if: always()
